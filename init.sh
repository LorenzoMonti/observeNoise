#!/bin/bash

# To edit crontab this is the command: crontab -e
# To show log of daily crontab: ls -la /etc/cron.daily/

TIME=30
SOUNDMETER_SPATH=~/.soundmeter/
echo "Hello, start bash script..."


# read weather, if it rains/snows/hails take data only for statistic analysis but analyzer.py return a no-noise result regardless.
# This is because having only a microphone available atmospheric conditions make it impossible to analyze, combined with the fact that it is assumed
# that if there are clamor will be made within decreasing the overall decibels.
ansiweather -l Bologna -f 1 -a false -s true | tail -c 5 > $SOUNDMETER_SPATH/weather.csv

# we use soundmeter in ordert to gather data from 20:00pm to 5:00am, and data is sampled every 10 seconds.
# in this way the two commands are launched in parallel (see symbol & at the end of the command) and are blocking for the following commands.
#arecord -vv -d "$TIME" -t raw | lame -r -h -V 0 -b 128 -B 224 - gathered_mp3/arecord$(date +%F).mp3 &
arecord -d "$TIME" -r 44100 $SOUNDMETER_SPATH/gathered_mp3/$(date +%F).wav &
soundmeter -s "$TIME" --segment 10 --log /dev/stdout 2>/dev/null | unbuffer -p perl -p -e 's/\s*(\d+)\s+(.{19})(.*)/"$2,". 20*log($1)/e' > $SOUNDMETER_SPATH/meter_tmp.csv &
wait

# PID of soundmeter process
# soundmeter_pid=$!
# killing soundmeter process
# kill -9 $soundmeter_pid


# we delete the last 3 lines from the csv file generated by soundmeter. In output there are timeouts and when the process is stopped.
head -n -3 $SOUNDMETER_SPATH/meter_tmp.csv > $SOUNDMETER_SPATH/meter.csv
# remove the tmp file
rm $SOUNDMETER_SPATH/meter_tmp.csv

# convert wav file generated and compress
lame -b 128 -m j -h -V 1 -B 256 -F $SOUNDMETER_SPATH/gathered_mp3/$(date +%F).wav $SOUNDMETER_SPATH/gathered_mp3/$(date +%F).mp3
# compress file mp3
tar -czvf $SOUNDMETER_SPATH/gathered_mp3/$(date +%F).tar.gz $SOUNDMETER_SPATH/gathered_mp3/$(date +%F).mp3
# remove the wav file
#rm gathered_mp3/$(date +%F).wav
# remove the wav file
#rm gathered_mp3/$(date +%F).mp3

echo "Great job, data gathered... now we analyze them!"

# python script able to analyze the data collected in order to notify or not the increase of db during the night
python $SOUNDMETER_SPATH/analyzer.py

echo "saving data"

# the data of the day will then be saved in the collected_data folder
cp $SOUNDMETER_SPATH/meter.csv $SOUNDMETER_SPATH/gathered_data/meter$(date +%F).csv
# remove meter.csv after saving it to the collected_data folder
rm $SOUNDMETER_SPATH/meter.csv
echo "sending whatsapp message..."

# TODO send mail or message
